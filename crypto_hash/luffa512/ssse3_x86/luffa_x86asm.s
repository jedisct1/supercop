#	Luffa512
#	Programmed by K.I.
#	Ver.1: 13.Sept.2010
#	Ver.2: 14.Sept.2010 Modified from Ver.1, change MIXWORD
#	Ver.3: 14.Sept.2010 Modified from Ver.2
#	Ver.4: 15.Sept.2010 Modified from Ver.3, make the code more readable

.intel_syntax

	.macro	ROUND	r0,r1,r2,r3,r4,r5,r6,r7,msg
	MI_IS	\r0,\r1,\r2,\r3,\r4,\r5,\r6,\r7
	MI_MSG	\r0,\r1,\r2,\r3,\r4,\r5,\r6,\r7,\msg
	PERM	\r0,\r1,\r2,\r3,\r4,\r5,\r6,\r7
	.endm

	.macro	OUTPUT m0,m1,m2,m3,m4,m5,m6,m7,rout
	movups	XMMWORD PTR [\rout], \m0
	movups	XMMWORD PTR [\rout+16], \m1
	movups	XMMWORD PTR [\rout+32], \m2
	movups	XMMWORD PTR [\rout+48], \m3
	movups	XMMWORD PTR [\rout+64], \m4
	movups	XMMWORD PTR [\rout+80], \m5
	movups	XMMWORD PTR [\rout+96], \m6
	movups	XMMWORD PTR [\rout+112], \m7
	movaps	\m0,XMMWORD PTR [buffer+128]
	movaps	\m1,XMMWORD PTR [buffer+144]
	movups	XMMWORD PTR [\rout+128], \m0
	movups	XMMWORD PTR [\rout+144], \m1
	.endm

	.macro	ROUND_final	r0,r1,r2,r3,r4,r5,r6,r7
	MI_IS	\r0,\r1,\r2,\r3,\r4,\r5,\r6,\r7

	movaps	\r3, XMMWORD PTR [buffer+48]
	CONV_FMT	\r0,\r1,\r2,\r3,\r6,\r7
	movaps	\r7, XMMWORD PTR [buffer+144]
	pshufb	\r7,XMMWORD PTR twmask[0]
	movaps	XMMWORD PTR [buffer+144], \r7
	movaps	\r6, XMMWORD PTR [buffer+96]
	movaps	\r7, XMMWORD PTR [buffer+112]
	movaps	XMMWORD PTR [buffer+48],\r3
	movaps	XMMWORD PTR [buffer+32],\r2

	pshufd	\r2,\r5,0x39
	pslld	\r5,4
	pshufd	\r3,\r7,0x39
	pslld	\r7,12
	pshufb	\r6,XMMWORD PTR mwmask[0]
	psrld	\r2,28
	psrld	\r3,20
	orps	\r5,\r2
	orps	\r7,\r3
	CONV_FMT	\r4,\r5,\r6,\r7,\r2,\r3

	PERM	\r0,\r1,\r2,\r3,\r4,\r5,\r6,\r7
	.endm

	.macro	OUTPUT_final m0,m1,m2,m3,m4,m5,m6,m7,rout
	movaps	XMMWORD PTR [buffer], \m0
	movaps	XMMWORD PTR [buffer+16], \m1
	UNCONV_FMT	\m0,\m1,\m2,\m3,\m6,\m7
	xorps	\m0,\m1
	xorps	\m0,\m2
	xorps	\m0,\m3
	xorps	\m0, XMMWORD PTR [buffer+128]
	movaps	\m4, XMMWORD PTR [buffer+64]
	movaps	\m5, XMMWORD PTR [buffer+80]
	movaps	\m6, XMMWORD PTR [buffer+96]
	movaps	\m7, XMMWORD PTR [buffer+112]
	UNCONV_FMT	\m4,\m5,\m6,\m7,\m2,\m3
	xorps	\m4,\m5
	xorps	\m4,\m6
	xorps	\m4,\m7
	xorps	\m4, XMMWORD PTR [buffer+144]
	UNPSHFL	\m0,\m4,\m1,\m2,\m3,\m5,\m6,\m7
	mov	\rout, [%esp+8]
	movaps	\m1, [buffer+16]
	movaps	\m2, [buffer+32]
	movaps	\m3, [buffer+48]
	movups	XMMWORD PTR [\rout], \m0
	movups	XMMWORD PTR [\rout+16], \m4
	movaps	\m0, [buffer]
	.endm

	.macro	OUTPUT_final2 m0,m1,m2,m3,m4,m5,m6,m7,rout
	UNCONV_FMT	\m0,\m1,\m2,\m3,\m6,\m7
	xorps	\m0,\m1
	xorps	\m0,\m2
	xorps	\m0,\m3
	xorps	\m0, XMMWORD PTR [buffer+128]
	movaps	\m4, XMMWORD PTR [buffer+64]
	movaps	\m5, XMMWORD PTR [buffer+80]
	movaps	\m6, XMMWORD PTR [buffer+96]
	movaps	\m7, XMMWORD PTR [buffer+112]
	UNCONV_FMT	\m4,\m5,\m6,\m7,\m2,\m3
	xorps	\m4,\m5
	xorps	\m4,\m6
	xorps	\m4,\m7
	xorps	\m4, XMMWORD PTR [buffer+144]
	UNPSHFL	\m0,\m4,\m1,\m2,\m3,\m5,\m6,\m7
	mov	\rout, [%esp+8]
	movups	XMMWORD PTR [\rout+32], \m0
	movups	XMMWORD PTR [\rout+48], \m4
	.endm

	.macro	PSHFL m0,m1,t0,t1
	pshufhw	\m0,\m0,0xd8
	pshuflw	\m0,\m0,0xd8
	pshufb	\m0, XMMWORD PTR psmask[0]

	pshufhw	\m1,\m1,0xd8
	pshuflw	\m1,\m1,0xd8
	pshufb	\m1, XMMWORD PTR psmask[0]
	SHFL_PART \m0,\m1,\t0,\t1, 4,psmask[16]
	SHFL_PART \m0,\m1,\t0,\t1, 2,psmask[32]
	SHFL_PART \m0,\m1,\t0,\t1, 1,mask22[0]

	pshufd	\m0,\m0,0xd8
	pshufhw	\m0,\m0,0xd8
	pshuflw	\m0,\m0,0xd8
	pshufb	\m0, XMMWORD PTR psmask[0]

	pshufd	\m1,\m1,0xd8
	pshufhw	\m1,\m1,0xd8
	pshuflw	\m1,\m1,0xd8
	pshufb	\m1, XMMWORD PTR psmask[0]
	SHFL_PART \m0,\m1,\t0,\t1, 4,psmask[16]
	SHFL_PART \m0,\m1,\t0,\t1, 2,psmask[32]
	.endm

	.macro	SHFL_PART m0,m1,t0,t1,sh,r
	movaps	\t0, \m0
	psrlq	\t0, \sh
	xorps	\t0, \m0
	andps	\t0, XMMWORD PTR \r
	xorps	\m0, \t0
	psllq	\t0, \sh
	xorps	\m0, \t0

	movaps	\t1, \m1
	psrlq	\t1, \sh
	xorps	\t1, \m1
	andps	\t1, XMMWORD PTR \r
	xorps	\m1, \t1
	psllq	\t1, \sh
	xorps	\m1, \t1
	.endm

	.macro	UNPSHFL m0,m1,t0,t1,r0,r1,r2,r3
	movaps	\r0, XMMWORD PTR psmask[0]
	SHFL_PART \m0,\m1,\t0,\t1, 2,psmask[32]
	SHFL_PART \m0,\m1,\t0,\t1, 4,psmask[16]
	pshufb	\m0,\r0
	pshufb	\m1,\r0
	pshufhw	\m0,\m0,0xd8
	pshufhw	\m1,\m1,0xd8
	pshuflw	\m0,\m0,0xd8
	pshuflw	\m1,\m1,0xd8
	pshufd	\m0,\m0,0xd8
	pshufd	\m1,\m1,0xd8
	SHFL_PART \m0,\m1,\t0,\t1, 1,mask22[0]
	SHFL_PART \m0,\m1,\t0,\t1, 2,psmask[32]
	SHFL_PART \m0,\m1,\t0,\t1, 4,psmask[16]
	pshufb	\m0,\r0
	pshufb	\m1,\r0
	pshufhw	\m0,\m0,0xd8
	pshufhw	\m1,\m1,0xd8
	pshuflw	\m0,\m0,0xd8
	pshuflw	\m1,\m1,0xd8
	.endm

	.macro	MULT2_1 m0,m1,t0,t1
	movaps	\t0,\m0
	movaps	\t1,\m1
	andps	\t0,XMMWORD PTR mask88[0]
	andps	\t1,XMMWORD PTR mask88[0]
	xorps	\m0,\t0
	xorps	\m1,\t1
	pslld	\m0,1
	pslld	\m1,1
	psrld	\t0,3
	xorps	\m1,\t0
	xorps	\m0,\t1
	psrld	\t1,2
	xorps	\m0,\t1
	psrld	\t1,1
	xorps	\m1,\t1
	xorps	\m0,\t1
	.endm

	.macro	CONV_FMT r0,r1,r2,r3,t0,t1
	movaps	\t1,\r1
	movaps	\t0,\r0
	andps	\t1,XMMWORD PTR mask55[0]
	andps	\t0,XMMWORD PTR maskaa[0]
	andps	\r0,XMMWORD PTR mask55[0]
	andps	\r1,XMMWORD PTR maskaa[0]
	pslld	\t1,1
	psrld	\t0,1
	orps	\r0,\t1
	orps	\r1,\t0

	movaps	\t1,\r3
	movaps	\t0,\r2
	andps	\t1,XMMWORD PTR mask55[0]
	andps	\t0,XMMWORD PTR maskaa[0]
	andps	\r2,XMMWORD PTR mask55[0]
	andps	\r3,XMMWORD PTR maskaa[0]
	pslld	\t1,1
	psrld	\t0,1
	orps	\r2,\t1
	orps	\r3,\t0

	movaps	\t1,\r2
	movaps	\t0,\r0
	andps	\t1,XMMWORD PTR mask33[0]
	andps	\t0,XMMWORD PTR maskcc[0]
	andps	\r0,XMMWORD PTR mask33[0]
	andps	\r2,XMMWORD PTR maskcc[0]
	pslld	\t1,2
	psrld	\t0,2
	orps	\r0,\t1
	orps	\r2,\t0

	movaps	\t1,\r3
	movaps	\t0,\r1
	andps	\t1,XMMWORD PTR mask33[0]
	andps	\r1,XMMWORD PTR mask33[0]
	xorps	\t0,\r1
	xorps	\r3,\t1
	pslld	\t1,2
	psrld	\t0,2
	orps	\r1,\t1
	orps	\r3,\t0
	.endm

	.macro	UNCONV_FMT	r0,r1,r2,r3,t0,t1
	movaps	\t0,\r0
	movaps	\t1,\r1
	andps	\r0,mask55
	psrld	\t0,1
	andps	\r1,maskaa
	pslld	\t1,1
	andps	\t0,mask55
	andps	\t1,maskaa
	orps	\r1,\t0
	orps	\r0,\t1

	movaps	\t0,\r2
	movaps	\t1,\r3
	andps	\r2,mask55
	psrld	\t0,1
	andps	\r3,maskaa
	pslld	\t1,1
	andps	\t0,mask55
	andps	\t1,maskaa
	orps	\r3,\t0
	orps	\r2,\t1

	movaps	\t0,\r0
	movaps	\t1,\r2
	andps	\r0,mask33
	psrld	\t0,2
	andps	\r2,maskcc
	pslld	\t1,2
	andps	\t0,mask33
	andps	\t1,maskcc
	orps	\r2,\t0
	orps	\r0,\t1

	movaps	\t0,\r1
	movaps	\t1,\r3
	andps	\r1,mask33
	psrld	\t0,2
	andps	\r3,maskcc
	pslld	\t1,2
	andps	\t0,mask33
	andps	\t1,maskcc
	orps	\r3,\t0
	orps	\r1,\t1
	.endm


	.macro	MI_IS	r0,r1,r2,r3,r4,r5,r6,r7
	UNCONV_FMT	\r0,\r1,\r2,\r3,\r4,\r5
	movaps	\r6,\r0
	xorps	\r0,\r2
	xorps	\r0,\r3
	xorps	\r0,\r1
	xorps	\r0,XMMWORD PTR[buffer+128]
	movaps	XMMWORD PTR [buffer], \r6
	movaps	XMMWORD PTR [buffer+16], \r1
	movaps	XMMWORD PTR [buffer+32], \r2
	movaps	XMMWORD PTR [buffer+48], \r3
	movaps	\r4,XMMWORD PTR[buffer+64]
	movaps	\r5,XMMWORD PTR[buffer+80]
	movaps	\r6,XMMWORD PTR[buffer+96]
	movaps	\r7,XMMWORD PTR[buffer+112]
	UNCONV_FMT	\r4,\r5,\r6,\r7,\r2,\r3
	movaps	\r1,XMMWORD PTR[buffer+144]
	xorps	\r1,\r4
	xorps	\r1,\r5
	xorps	\r1,\r6
	xorps	\r1,\r7
	MULT2_1	\r0,\r1,\r2,\r3
	movaps	\r2, XMMWORD PTR[buffer+128]
	movaps	\r3, XMMWORD PTR[buffer+144]
	xorps	\r4,\r1
	xorps	\r2,\r0
	xorps	\r3,\r1
	xorps	\r5,\r1
	xorps	\r6,\r1
	xorps	\r7,\r1
	movaps	XMMWORD PTR[buffer+128], \r2
	movaps	XMMWORD PTR[buffer+144], \r3
	movaps	\r2, XMMWORD PTR[buffer+32]
	movaps	\r3, XMMWORD PTR[buffer+48]
	movaps	\r1,XMMWORD PTR[buffer+16]
	xorps	\r3,\r0
	xorps	\r2,\r0
	xorps	\r1,\r0
	xorps	\r0,XMMWORD PTR[buffer]
	movaps	XMMWORD PTR[buffer+64], \r4
	movaps	XMMWORD PTR[buffer], \r0
	movaps	XMMWORD PTR[buffer+48],\r3
	movaps	XMMWORD PTR[buffer+112],\r7
	MULT2_1	\r0,\r4,\r3,\r7
	xorps	\r0,\r1
	xorps	\r4,\r5
	MULT2_1	\r1,\r5,\r3,\r7
	xorps	\r1,\r2
	xorps	\r5,\r6
	MULT2_1	\r2,\r6,\r3,\r7
	movaps	\r3,XMMWORD PTR[buffer+48]
	movaps	\r7,XMMWORD PTR[buffer+112]
	movaps	XMMWORD PTR[buffer+16], \r1
	movaps	XMMWORD PTR[buffer+80], \r5
	xorps	\r2,\r3
	xorps	\r6,\r7
	MULT2_1	\r3,\r7,\r1,\r5
	movaps	\r1, XMMWORD PTR[buffer+128]
	movaps	\r5, XMMWORD PTR[buffer+144]
	movaps	XMMWORD PTR[buffer+32], \r2
	movaps	XMMWORD PTR[buffer+96], \r6
	xorps	\r3,\r1
	xorps	\r7,\r5
	MULT2_1	\r1,\r5,\r2,\r6
	xorps	\r1,XMMWORD PTR [buffer]
	xorps	\r5,XMMWORD PTR [buffer+64]
	movaps	XMMWORD PTR [buffer], \r0
	movaps	XMMWORD PTR [buffer+64], \r4
	MULT2_1	\r0,\r4,\r2,\r6
	xorps	\r0,\r1
	xorps	\r4,\r5
	MULT2_1	\r1,\r5,\r2,\r6
	xorps	\r1,\r3
	xorps	\r5,\r7
	movaps	\r2, XMMWORD PTR [buffer+32]
	movaps	\r6, XMMWORD PTR [buffer+96]
	movaps	XMMWORD PTR [buffer+128],\r1
	movaps	XMMWORD PTR [buffer+144],\r5
	MULT2_1	\r3,\r7,\r1,\r5
	xorps	\r3,\r2
	xorps	\r7,\r6
	movaps	\r1,XMMWORD PTR [buffer+16]
	movaps	\r5,XMMWORD PTR [buffer+80]
	movaps	XMMWORD PTR [buffer+48],\r3
	movaps	XMMWORD PTR [buffer+112],\r7
	MULT2_1	\r2,\r6,\r3,\r7
	xorps	\r2,\r1
	xorps	\r6,\r5
	MULT2_1	\r1,\r5,\r3,\r7
	movaps	XMMWORD PTR [buffer+32],\r2
	movaps	XMMWORD PTR [buffer+96],\r6
	xorps	\r1, XMMWORD PTR [buffer]
	xorps	\r5, XMMWORD PTR [buffer+64]
	.endm

	.macro	MI_MSG	r0,r1,r2,r3,r4,r5,r6,r7,msg
	movups	\r3,XMMWORD PTR [\msg+0]
	movups	\r7,XMMWORD PTR [\msg+16]
	PSHFL	\r3,\r7,\r2,\r6
	xorps	\r0,\r3
	xorps	\r4,\r7
	MULT2_1	\r3,\r7,\r2,\r6
	movaps	XMMWORD PTR [buffer+64], \r4
	xorps	\r1,\r3
	xorps	\r5,\r7
	MULT2_1	\r3,\r7,\r2,\r6
	movaps	\r2,\r3
	movaps	\r6,\r7
	xorps	\r2,XMMWORD PTR[buffer+32]
	xorps	\r6,XMMWORD PTR[buffer+96]
	movaps	XMMWORD PTR [buffer+80], \r5
	MULT2_1	\r3,\r7,\r4,\r5
	movaps	XMMWORD PTR [buffer+96], \r6
	movaps	\r4,XMMWORD PTR [buffer+48]
	movaps	\r5,XMMWORD PTR [buffer+112]
	xorps	\r4,\r3
	xorps	\r5,\r7
	movaps	XMMWORD PTR [buffer +112], \r5
	MULT2_1	\r3,\r7,\r6,\r5
	xorps	\r3,XMMWORD PTR [buffer+128]
	xorps	\r7,XMMWORD PTR [buffer+144]

	CONV_FMT	\r0,\r1,\r2,\r4,\r5,\r6
	pshufb	\r7,XMMWORD PTR twmask[0]
	movaps	XMMWORD PTR [buffer+128], \r3
	movaps	XMMWORD PTR [buffer+144], \r7
	movaps	\r5, XMMWORD PTR [buffer+80]
	movaps	\r6, XMMWORD PTR [buffer+96]
	movaps	\r7, XMMWORD PTR [buffer+112]
	movaps	XMMWORD PTR [buffer+48],\r4
	movaps	XMMWORD PTR [buffer+32],\r2
	movaps	\r4, XMMWORD PTR[buffer+64]

	pshufd	\r2,\r5,0x39
	pslld	\r5,4
	pshufd	\r3,\r7,0x39
	pslld	\r7,12
	pshufb	\r6,XMMWORD PTR mwmask[0]
	psrld	\r2,28
	psrld	\r3,20
	orps	\r5,\r2
	orps	\r7,\r3
	CONV_FMT	\r4,\r5,\r6,\r7,\r2,\r3
	.endm

	.macro	NMLTOM	r0,r2,r4,r6,t0,t1
	//in :r0=d0 c0 b0 a0, r1=h0 g0 f0 e0, r2=d1 c1 b1 a1, r3=...
	//out:r0=a3 a2 a1 a0, r2=b3 b2 b1 b0, r4=c3 c2 c1 c0, r6=d3 d2 d1 d0
	movaps	\t0, \r0
	movaps	\t1, \r4
	punpckldq	\r0, \r2
	punpckldq	\r4, \r6
	punpckhdq	\t0, \r2
	punpckhdq	\t1, \r6
	movaps	\r2, \r0
	movaps	\r6, \t0
	punpcklqdq	\r0, \r4
	punpckhqdq	\r2, \r4
	punpcklqdq	\t0, \t1
	punpckhqdq	\r6, \t1
	movaps	\r4,\t0
	.endm

	.macro	PERM	r0,r1,r2,r3,r4,r5,r6,r7
	STEP	\r0,\r1,\r2,\r3,\r4,\r5,\r6,\r7,RND_CNS+0  
	STEP	\r5,\r1,\r2,\r3,\r4,\r0,\r6,\r7,RND_CNS+64 
	STEP	\r0,\r1,\r2,\r3,\r4,\r5,\r6,\r7,RND_CNS+128
	STEP	\r5,\r1,\r2,\r3,\r4,\r0,\r6,\r7,RND_CNS+192
	STEP	\r0,\r1,\r2,\r3,\r4,\r5,\r6,\r7,RND_CNS+256
	STEP	\r5,\r1,\r2,\r3,\r4,\r0,\r6,\r7,RND_CNS+320
	STEP	\r0,\r1,\r2,\r3,\r4,\r5,\r6,\r7,RND_CNS+384
	STEP	\r5,\r1,\r2,\r3,\r4,\r0,\r6,\r7,RND_CNS+448
	movaps	XMMWORD PTR [buffer+64],\r4
	movaps	XMMWORD PTR [buffer+80],\r5
	movaps	XMMWORD PTR [buffer+96],\r6
	movaps	XMMWORD PTR [buffer+112],\r7
	movaps	\r2,XMMWORD PTR[buffer+32]
	movaps	\r3,XMMWORD PTR[buffer+48]
	.endm

	.macro	STEP	r0,r1,r2,r3,r4,r5,r6,r7,cns
	SUB_CRUMB	\r5,\r6,\r7,\r4,\r2
	movaps	\r3, XMMWORD PTR [buffer+128]
	movaps	XMMWORD PTR [buffer+80], \r2
	movaps	XMMWORD PTR [buffer+96], \r6
	SUB_CRUMB_2	\r3,\r2,\r5,\r6
	movaps	\r3, XMMWORD PTR [buffer+144]
	movaps	XMMWORD PTR [buffer+128], \r2
	SUB_CRUMB_3	\r3,\r2,\r5,\r6
	movaps	XMMWORD PTR [buffer+144], \r2
	movaps	\r2, XMMWORD PTR [buffer+32]
	movaps	\r3, XMMWORD PTR [buffer+48]
	SUB_CRUMB	\r0,\r1,\r2,\r3,\r5
	movaps	\r6, XMMWORD PTR [buffer+96]
	MIX_WORD	\r5,\r1,\r2,\r3,\r4,\r0,\r6,\r7,\cns
	.endm

	#(r0,r1,r2,r3)->(r4,r1,r2,r3)
	.macro SUB_CRUMB	r0,r1,r2,r3,r4

	movaps	\r4, \r0
	orps	\r0, \r1
	xorps	\r2, \r3
	xorps	\r1, XMMWORD PTR allone[0]
	xorps	\r0, \r3
	andps	\r3, \r4
	xorps	\r1, \r3
	xorps	\r3, \r2
	andps	\r2, \r0
	xorps	\r0, XMMWORD PTR allone[0]
	xorps	\r2, \r1
	orps	\r1, \r3
	xorps	\r4, \r1
	xorps	\r3, \r2
	andps	\r2, \r1
	xorps	\r1, \r0
	.endm

	.macro	SUB_CRUMB_2 r0,t0,t1,t2
	movaps	\t0, XMMWORD PTR sbox[0]
	movaps	\t1, XMMWORD PTR sbox[16]
	movaps	\t2, \r0
	andps	\r0, XMMWORD PTR smask[0]
	psrld	\t2, 4
	pshufb	\t0, \r0
	andps	\t2, XMMWORD PTR smask[0]
	pshufb	\t1, \t2
	xorps	\t0, \t1
	.endm

	.macro SUB_CRUMB_3 r0,t0,t1,t2
	movaps	\t0, XMMWORD PTR sbox[32]
	movaps	\t1, XMMWORD PTR sbox[48]
	movaps	\t2, \r0
	andps	\r0, XMMWORD PTR smask[0]
	psrld	\t2, 4
	pshufb	\t0, \r0
	andps	\t2, XMMWORD PTR smask[0]
	pshufb	\t1, \t2
	xorps	\t0, \t1
	.endm

	.macro	MIX_WORD m0,m1,m2,m3,m4,t0,m6,m7,cns

	xorps	\m6,\m2
	pshufb	\m2,XMMWORD PTR mwmask[0]
	xorps	\m2,\m6
	pshufb	\m6,XMMWORD PTR mwmask[16]
	xorps	\m6,\m2
	pshufb	\m2,XMMWORD PTR mwmask[32]
	xorps	\m2,\m6
	pshufd	\t0,\m6,0x39
	pslld	\m6,4
	psrld	\t0,28
	orps	\m6,\t0
	movaps	XMMWORD PTR[buffer+32],\m2

	xorps	\m7,\m3
	pshufb	\m3,XMMWORD PTR mwmask[0]
	xorps	\m3,\m7
	pshufb	\m7,XMMWORD PTR mwmask[16]
	xorps	\m7,\m3
	pshufb	\m3,XMMWORD PTR mwmask[32]
	xorps	\m3,\m7
	pshufd	\t0,\m7,0x39
	pslld	\m7,4
	psrld	\t0,28
	orps	\m7,\t0
	movaps	XMMWORD PTR[buffer+48],\m3
	movaps	\t0, XMMWORD PTR[buffer+80]

	xorps	\m4,\m0
	pshufb	\m0,XMMWORD PTR mwmask[0]
	xorps	\m0,\m4
	pshufb	\m4,XMMWORD PTR mwmask[16]
	xorps	\m4,\m0
	pshufb	\m0,XMMWORD PTR mwmask[32]
	xorps	\m0,\m4
	pshufd	\m2,\m4,0x39
	pslld	\m4,4
	psrld	\m2,28
	orps	\m4,\m2
 	xorps	\m0, XMMWORD PTR [\cns+0]

	xorps	\t0,\m1
	pshufb	\m1,XMMWORD PTR mwmask[0]
	xorps	\m1,\t0
	pshufb	\t0,XMMWORD PTR mwmask[16]
	xorps	\t0,\m1
	pshufb	\m1,XMMWORD PTR mwmask[32]
	xorps	\m1,\t0
	pshufd	\m2,\t0,0x39
	pslld	\t0,4
	psrld	\m2,28
	orps	\t0,\m2
	movaps	XMMWORD PTR [buffer+16],\m1

 	xorps	\m4, XMMWORD PTR [\cns+16]

	movaps	\m2, XMMWORD PTR [buffer+128]
	movaps	\m3, XMMWORD PTR [buffer+144]
	xorps	\m3,\m2
	pshufb	\m2,XMMWORD PTR mwmask[0]
	xorps	\m2,\m3
	pshufb	\m3,XMMWORD PTR mwmask[16]
	xorps	\m3,\m2
	pshufb	\m2,XMMWORD PTR mwmask[32]
	xorps	\m2,\m3
	pshufd	\m1,\m3,0x39
	pslld	\m3,4
	psrld	\m1,28
	orps	\m3,\m1
	xorps	\m2, XMMWORD PTR [\cns+32]
	xorps	\m3, XMMWORD PTR [\cns+48]
	movaps	XMMWORD PTR [buffer+128], \m2
	movaps	XMMWORD PTR [buffer+144], \m3
	movaps	\m1, XMMWORD PTR [buffer+16]
	.endm

.text
	.globl	luffa512_init
	.type	luffa512_init, @function
	.align	16
luffa512_init:
	mov	%ecx, [%esp+4]
	movaps	%xmm0, XMMWORD PTR [IV]
	movaps	%xmm1, XMMWORD PTR [IV+16]
	movaps	%xmm2, XMMWORD PTR [IV+32]
	movaps	%xmm3, XMMWORD PTR [IV+48]
	movaps	%xmm4, XMMWORD PTR [IV+64]
	movaps	%xmm5, XMMWORD PTR [IV+80]
	movaps	%xmm6, XMMWORD PTR [IV+96]
	movaps	%xmm7, XMMWORD PTR [IV+112]
	movups	XMMWORD PTR [%ecx], %xmm0
	movups	XMMWORD PTR [%ecx+16], %xmm1
	movups	XMMWORD PTR [%ecx+32], %xmm2
	movups	XMMWORD PTR [%ecx+48], %xmm3
	movups	XMMWORD PTR [%ecx+64], %xmm4
	movups	XMMWORD PTR [%ecx+80], %xmm5
	movups	XMMWORD PTR [%ecx+96], %xmm6
	movups	XMMWORD PTR [%ecx+112], %xmm7
	movaps	%xmm4, XMMWORD PTR [IV+128]
	movaps	%xmm5, XMMWORD PTR [IV+144]
	movups	XMMWORD PTR [%ecx+128], %xmm4
	movups	XMMWORD PTR [%ecx+144], %xmm5

	ret
	.size	luffa512_init, .-luffa512_init

	.globl	luffa512
	.type	luffa512, @function
	.align	16
luffa512:
	mov	%eax, DWORD PTR [%esp+12]
	mov	%ecx, DWORD PTR [%esp+4]
	movups	%xmm0, XMMWORD PTR [%ecx]
	movups	%xmm1, XMMWORD PTR [%ecx+16]
	movups	%xmm2, XMMWORD PTR [%ecx+32]
	movups	%xmm3, XMMWORD PTR [%ecx+48]
	movups	%xmm4, XMMWORD PTR [%ecx+64]
	movups	%xmm5, XMMWORD PTR [%ecx+80]
	movups	%xmm6, XMMWORD PTR [%ecx+96]
	movups	%xmm7, XMMWORD PTR [%ecx+112]
	movaps	XMMWORD PTR [buffer+64], %xmm4
	movaps	XMMWORD PTR [buffer+80], %xmm5
	movaps	XMMWORD PTR [buffer+96], %xmm6
	movaps	XMMWORD PTR [buffer+112], %xmm7
	movups	%xmm4, XMMWORD PTR [%ecx+128]
	movups	%xmm5, XMMWORD PTR [%ecx+144]
	movaps	XMMWORD PTR [buffer+128], %xmm4
	movaps	XMMWORD PTR [buffer+144], %xmm5
	mov	%edx, [%esp+8]
.RND:
	ROUND	%xmm0,%xmm1,%xmm2,%xmm3,%xmm4,%xmm5,%xmm6,%xmm7,%edx
	add	%edx, 32
	sub	%eax, 1
	jnz	.RND
	OUTPUT	%xmm0,%xmm1,%xmm2,%xmm3,%xmm4,%xmm5,%xmm6,%xmm7,%ecx

	ret
	.size	luffa512, .-luffa512

	.globl	luffa512_final
	.type	luffa512_final, @function
	.align	16
luffa512_final:
	mov	%eax, DWORD PTR [%esp+12]
	mov	%ecx, DWORD PTR [%esp+4]
	movups	%xmm0, XMMWORD PTR [%ecx]
	movups	%xmm1, XMMWORD PTR [%ecx+16]
	movups	%xmm2, XMMWORD PTR [%ecx+32]
	movups	%xmm3, XMMWORD PTR [%ecx+48]
	movups	%xmm4, XMMWORD PTR [%ecx+64]
	movups	%xmm5, XMMWORD PTR [%ecx+80]
	movups	%xmm6, XMMWORD PTR [%ecx+96]
	movups	%xmm7, XMMWORD PTR [%ecx+112]
	movaps	XMMWORD PTR [buffer+64], %xmm4
	movaps	XMMWORD PTR [buffer+80], %xmm5
	movaps	XMMWORD PTR [buffer+96], %xmm6
	movaps	XMMWORD PTR [buffer+112], %xmm7
	movups	%xmm4, XMMWORD PTR [%ecx+128]
	movups	%xmm5, XMMWORD PTR [%ecx+144]
	movaps	XMMWORD PTR [buffer+128], %xmm4
	movaps	XMMWORD PTR [buffer+144], %xmm5
	mov	%edx, DWORD PTR [%esp+8]

	ROUND_final	%xmm0,%xmm1,%xmm2,%xmm3,%xmm4,%xmm5,%xmm6,%xmm7
	OUTPUT_final	%xmm0,%xmm1,%xmm2,%xmm3,%xmm4,%xmm5,%xmm6,%xmm7,%edx
	ROUND_final	%xmm0,%xmm1,%xmm2,%xmm3,%xmm4,%xmm5,%xmm6,%xmm7
	OUTPUT_final2	%xmm0,%xmm1,%xmm2,%xmm3,%xmm4,%xmm5,%xmm6,%xmm7,%edx

	ret
	.size	luffa512_final, .-luffa512_final

	.section	.rodata
	.align 32
mask16:
	.long	0xfffffff0,0xffffffff,0x00000000,0x00000000
	.align	32
mask33:
	.long	0x33333333,0x33333333,0x33333333,0x33333333
maskaa:
	.long	0xaaaaaaaa,0xaaaaaaaa,0xaaaaaaaa,0xaaaaaaaa
mask55:
	.long	0x55555555,0x55555555,0x55555555,0x55555555
maskcc:
	.long	0xcccccccc,0xcccccccc,0xcccccccc,0xcccccccc
mask22:
	.long	0x22222222,0x22222222,0x22222222,0x22222222
mask44:
	.long	0x44444444,0x44444444,0x44444444,0x44444444
mask88:
	.long	0x88888888,0x88888888,0x88888888,0x88888888
mask11:
	.long	0x11111111,0x11111111,0x11111111,0x11111111
mask77:
	.long	0x77777777,0x77777777,0x77777777,0x77777777
mult2mask:
	.long	0x88888888,0x88888888,0x88888888,0x88888888
psmask:
	.long	0x03010200,0x07050604,0x0b090a08,0x0f0d0e0c
	.long	0x00f000f0,0x00f000f0,0x00f000f0,0x00f000f0
	.long	0x0c0c0c0c,0x0c0c0c0c,0x0c0c0c0c,0x0c0c0c0c
twmask:
	.byte	0x6,0x7,0x0,0x1,0xa,0xb,0x4,0x5
	.byte	0xe,0xf,0x8,0x9,0x2,0x3,0xc,0xd
mwmask:
	.byte	0x7,0x0,0x1,0x2,0xb,0x4,0x5,0x6
	.byte	0xf,0x8,0x9,0xa,0x3,0xc,0xd,0xe
	.byte	0x9,0xa,0xb,0x4,0xd,0xe,0xf,0x8
	.byte	0x1,0x2,0x3,0xc,0x5,0x6,0x7,0x0
	.byte	0xb,0x4,0x5,0x6,0xf,0x8,0x9,0xa
	.byte	0x3,0xc,0xd,0xe,0x7,0x0,0x1,0x2
	.long	0xf0000000,0xf0000000,0xf0000000,0xf0000000
allone:
	.byte	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
	.byte	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
sbox:
	.byte	0x0d,0x0e,0x00,0x01,0x05,0x0a,0x07,0x06
	.byte	0x0b,0x03,0x09,0x0c,0x0f,0x08,0x02,0x04
	.byte	0xd0,0xe0,0x00,0x10,0x50,0xa0,0x70,0x60
	.byte	0xb0,0x30,0x90,0xc0,0xf0,0x80,0x20,0x40
	.byte	0x0b,0x07,0x0d,0x06,0x00,0x03,0x02,0x09
	.byte	0x0a,0x0f,0x05,0x01,0x0e,0x04,0x0c,0x08
	.byte	0xb0,0x70,0xd0,0x60,0x00,0x30,0x20,0x90
	.byte	0xa0,0xf0,0x50,0x10,0xe0,0x40,0xc0,0x80
smask:
	.long	0x0f0f0f0f,0x0f0f0f0f,0x0f0f0f0f,0x0f0f0f0f

	.globl	IV
	.align	32
	.type	IV, @object
	.size	IV, 128
IV:	
	.byte 0x6f,0x1d,0x54,0xe7,0x45,0x47,0x72,0xe4
	.byte 0x3a,0x79,0x89,0x4e,0x0f,0x5e,0x1e,0xe9
	.byte 0x86,0x6d,0x8e,0x27,0xe8,0x48,0x5f,0xfa
	.byte 0x65,0x8c,0x2f,0xa7,0xa4,0x8a,0x12,0xdb
	.byte 0x18,0x1d,0xa2,0x8b,0x3c,0x32,0xb8,0x3a
	.byte 0x9b,0x7d,0xf8,0xaf,0x8c,0x0d,0x79,0xfc
	.byte 0x35,0x76,0xc3,0x73,0x9f,0xa5,0x51,0x1d
	.byte 0xaa,0xef,0x0e,0x70,0xaf,0x0d,0xb0,0x29
	.byte 0x5e,0x3b,0x9a,0x03,0xeb,0x3c,0x12,0xa0
	.byte 0x06,0xca,0x14,0x00,0xe7,0xc6,0x83,0x0e
	.byte 0xea,0x2e,0x49,0x3c,0x0f,0xe5,0xc1,0xae
	.byte 0x09,0xd3,0x94,0x8a,0xea,0x05,0xf7,0x31
	.byte 0x32,0x3f,0x58,0x33,0x41,0xeb,0xca,0xc0
	.byte 0x67,0xa2,0xc8,0xb2,0x61,0xf2,0x11,0x00
	.byte 0x54,0xdb,0xab,0x5b,0xd0,0xaf,0x79,0x9b
	.byte 0xc2,0x42,0x8b,0x2e,0xd7,0x9c,0x51,0xfc
	.byte 0xa8,0xfb,0x92,0xc7,0x8c,0x96,0xd8,0xab
	.byte 0xed,0x36,0x56,0x59,0xfc,0x15,0xb1,0x5c
	.byte 0xab,0x23,0x55,0x51,0x71,0x93,0xc5,0xbf
	.byte 0x01,0xbc,0xd1,0x28,0x83,0xd4,0xa3,0xfe
IV_ORIG:
	.byte	0x6d,0x25,0x1e,0x69,0x44,0xb0,0x51,0xe0
	.byte	0x4e,0xaa,0x6f,0xb4,0xdb,0xf7,0x84,0x65
	.byte	0x6e,0x29,0x20,0x11,0x90,0x15,0x2d,0xf4
	.byte	0xee,0x05,0x81,0x39,0xde,0xf6,0x10,0xbb
	.byte	0xc3,0xb4,0x4b,0x95,0xd9,0xd2,0xf2,0x56
	.byte	0x70,0xee,0xe9,0xa0,0xde,0x09,0x9f,0xa3
	.byte	0x5d,0x9b,0x05,0x57,0x8f,0xc9,0x44,0xb3
	.byte	0xcf,0x1c,0xcf,0x0e,0x74,0x6c,0xd5,0x81
	.byte	0xf7,0xef,0xc8,0x9d,0x5d,0xba,0x57,0x81
	.byte	0x04,0x01,0x6c,0xe5,0xad,0x65,0x9c,0x05
	.byte	0x03,0x06,0x19,0x4f,0x66,0x6d,0x18,0x36
	.byte	0x24,0xaa,0x23,0x0a,0x8b,0x26,0x4a,0xe7
	.byte	0x85,0x80,0x75,0xd5,0x36,0xd7,0x9c,0xce
	.byte	0xe5,0x71,0xf7,0xd7,0x20,0x4b,0x1f,0x67
	.byte	0x35,0x87,0x0c,0x6a,0x57,0xe9,0xe9,0x23
	.byte	0x14,0xbc,0xb8,0x08,0x7c,0xde,0x72,0xce
	.byte	0x6c,0x68,0xe9,0xbe,0x5e,0xc4,0x1e,0x22
	.byte	0xc8,0x25,0xb7,0xc7,0xaf,0xfb,0x43,0x63
	.byte	0xf5,0xdf,0x39,0x99,0x0f,0xc6,0x88,0xf1
	.byte	0xb0,0x72,0x24,0xcc,0x03,0xe8,0x6c,0xea



RND_CNS:
	//RND1
	.byte 0xa0,0x46,0xff,0xe4,0xa9,0x32,0x5b,0x22
	.byte 0x8c,0xc9,0x87,0xd4,0x5a,0x2b,0xb4,0xf6
	.byte 0x42,0x00,0xd0,0xdd,0x51,0xe4,0xb5,0x06
	.byte 0x6a,0xb2,0x57,0x8f,0x8e,0xba,0xab,0xc4
	.byte 0x00,0x00,0x11,0x11,0x10,0x00,0x01,0x11
	.byte 0x01,0x10,0x10,0x11,0x11,0x00,0x10,0x11
	.byte 0x00,0x00,0x01,0x01,0x00,0x00,0x01,0x10
	.byte 0x01,0x01,0x01,0x11,0x11,0x01,0x11,0x01
	//RND2
	.byte 0x00,0x84,0x66,0x9b,0x94,0x8f,0x36,0x3f
	.byte 0xf0,0xec,0xeb,0x83,0x2d,0x3e,0x69,0xb0
	.byte 0x42,0x0f,0x40,0x4d,0x5f,0x18,0xe9,0x28
	.byte 0xcd,0xfa,0xf6,0x5a,0x49,0x13,0x6e,0xa6
	.byte 0x00,0x11,0x10,0x10,0x01,0x00,0x01,0x00
	.byte 0x11,0x01,0x01,0x11,0x10,0x10,0x11,0x11
	.byte 0x01,0x11,0x10,0x00,0x01,0x10,0x01,0x00
	.byte 0x01,0x01,0x10,0x00,0x11,0x10,0x10,0x10
	//RND3
	.byte 0xe2,0xdb,0x54,0x0d,0x33,0x42,0x84,0x5d
	.byte 0xb6,0x90,0x31,0xe0,0xd4,0x46,0x83,0x62
	.byte 0x93,0xff,0xbf,0x2d,0x8a,0xe9,0x15,0x84
	.byte 0xa0,0xad,0x41,0xfb,0xb0,0x24,0xc8,0x63
	.byte 0x11,0x10,0x01,0x00,0x11,0x10,0x00,0x11
	.byte 0x10,0x01,0x10,0x01,0x10,0x00,0x11,0x11
	.byte 0x00,0x01,0x11,0x10,0x00,0x01,0x10,0x01
	.byte 0x10,0x01,0x01,0x10,0x00,0x11,0x10,0x10
	//RND4
	.byte 0x80,0x3f,0x0b,0x59,0x30,0xe3,0x4f,0x89
	.byte 0x62,0xb6,0x4d,0x3c,0xd2,0xd9,0x9b,0x8e
	.byte 0x59,0x4e,0x2f,0xb2,0x2b,0x5a,0xe4,0x18
	.byte 0x63,0xa0,0x70,0x4c,0xd5,0xbd,0xf9,0xc5
	.byte 0x11,0x11,0x10,0x01,0x01,0x11,0x10,0x00
	.byte 0x11,0x10,0x01,0x10,0x01,0x10,0x00,0x11
	.byte 0x01,0x00,0x01,0x11,0x10,0x00,0x01,0x10
	.byte 0x10,0x10,0x01,0x01,0x00,0x00,0x11,0x10
	//RND5
	.byte 0x54,0x59,0xef,0x42,0xac,0xe4,0xea,0x06
	.byte 0x8a,0x22,0x6b,0x44,0xdb,0x9b,0x44,0x92
	.byte 0x81,0xcb,0xde,0x9d,0x6c,0xb0,0x58,0x56
	.byte 0xce,0xd3,0x39,0x72,0x94,0x67,0x94,0xfb
	.byte 0x00,0x10,0x11,0x01,0x00,0x00,0x10,0x01
	.byte 0x10,0x01,0x10,0x00,0x01,0x10,0x00,0x01
	.byte 0x01,0x10,0x10,0x00,0x11,0x00,0x01,0x00
	.byte 0x10,0x10,0x01,0x00,0x10,0x01,0x11,0x10
	//RND6
	.byte 0x24,0x76,0x79,0xed,0x64,0x8c,0xe6,0xe8
	.byte 0x92,0x8a,0x00,0x69,0x29,0xd9,0xb9,0x46
	.byte 0x74,0xac,0xeb,0x23,0xa2,0x43,0xbd,0xa5
	.byte 0xf4,0x3e,0xf1,0x34,0x2e,0x69,0xb5,0x99
	.byte 0x10,0x11,0x00,0x10,0x10,0x10,0x01,0x11
	.byte 0x01,0x10,0x10,0x11,0x10,0x00,0x01,0x01
	.byte 0x11,0x11,0x00,0x00,0x00,0x00,0x00,0x11
	.byte 0x11,0x00,0x01,0x01,0x11,0x00,0x00,0x11
	//RND7
	.byte 0x35,0xf9,0xa6,0x74,0xb9,0xb4,0x81,0xeb
	.byte 0x46,0x92,0x57,0x0d,0xd2,0x24,0x04,0xb4
	.byte 0x78,0xa7,0x7c,0x08,0x04,0x7c,0x40,0x5e
	.byte 0x97,0x14,0xe3,0xf2,0xd7,0xcd,0x54,0xb6
	.byte 0x11,0x10,0x11,0x00,0x11,0x10,0x10,0x01
	.byte 0x01,0x01,0x10,0x10,0x00,0x10,0x00,0x01
	.byte 0x11,0x11,0x11,0x00,0x01,0x00,0x00,0x00
	.byte 0x11,0x11,0x00,0x01,0x00,0x11,0x00,0x00
	//RND8
	.byte 0xd8,0x01,0xc9,0xd2,0x4d,0x8e,0xb0,0xf5
	.byte 0xb3,0x36,0xa1,0x53,0x30,0xa6,0x67,0x00
	.byte 0x1a,0x30,0xe7,0xb4,0x72,0x48,0x74,0x88
	.byte 0xba,0x57,0x50,0xeb,0x4d,0x1f,0x49,0x5c
	.byte 0x01,0x11,0x10,0x11,0x10,0x11,0x10,0x10
	.byte 0x01,0x01,0x01,0x10,0x00,0x00,0x10,0x00
	.byte 0x00,0x11,0x11,0x11,0x01,0x01,0x00,0x00
	.byte 0x00,0x11,0x11,0x00,0x01,0x00,0x11,0x00


RND_CNS_ORIG:
	//w=0,k=0
	.byte	0x30,0x39,0x94,0xa6,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xc0,0xe6,0x52,0x99,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x6c,0xc3,0x3a,0x12,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xdc,0x56,0x98,0x3e,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x1e,0x00,0x10,0x8f,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x78,0x00,0x42,0x3d,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x8f,0x5b,0x78,0x82,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
RND_CNS_ORIG2:
	.byte	0x96,0xe1,0xdb,0x12,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	//w=0,k=4
	.byte	0xe0,0x33,0x78,0x18,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x44,0x1b,0xa9,0x0d,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x7f,0x34,0xd4,0x42,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x93,0x89,0x21,0x7f,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xe5,0xa8,0xbc,0xe6,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x52,0x74,0xba,0xf4,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x26,0x88,0x9b,0xa7,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x9a,0x22,0x6e,0x9d,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00

	//w=1,k=0
	.byte	0xb6,0xde,0x10,0xed,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x70,0xf4,0x7a,0xae,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x07,0x07,0xa3,0xd4,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x1c,0x1e,0x8f,0x51,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x70,0x7a,0x3d,0x45,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xae,0xb2,0x85,0x62,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xba,0xca,0x15,0x89,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x40,0xa4,0x6f,0x3e,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	//w=1,k=4
	.byte	0x01,0x68,0x5f,0x3d,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x05,0xa1,0x7c,0xf4,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xbd,0x09,0xca,0xca,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xf4,0x27,0x2b,0x28,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x14,0x4a,0xe5,0xcc,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xfa,0xa7,0xae,0x2b,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x2e,0x48,0xf1,0xc1,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xb9,0x23,0xc7,0x04,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	//w=2,k=0
	.byte	0xfc,0x20,0xd9,0xd2,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x34,0x55,0x2e,0x25,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x7a,0xd8,0x81,0x8f,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x84,0x38,0x76,0x4a,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xbb,0x6d,0xe0,0x32,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xed,0xb7,0x80,0xc8,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xd9,0x84,0x73,0x56,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xa2,0xc7,0x84,0x34,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	//w=2,k=4
	.byte	0xe2,0x5e,0x72,0xc1,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xe6,0x23,0xbb,0x72,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x5c,0x58,0xa4,0xa4,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x1e,0x38,0xe2,0xe7,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x78,0xe3,0x8b,0x9d,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x27,0x58,0x67,0x19,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x36,0xed,0xa5,0x7f,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x70,0x3a,0xac,0xe7,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	//w=3,k=0
	.byte	0xb2,0x13,0xaf,0xa5,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xc8,0x4e,0xbe,0x95,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x4e,0x60,0x8a,0x22,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x56,0xd8,0x58,0xfe,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x34,0x3b,0x13,0x8f,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xd0,0xec,0x4e,0x3d,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x2c,0xeb,0x48,0x82,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xb3,0xad,0x22,0x08,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	//w=3,k=4
	.byte	0xe0,0x28,0xc9,0xbf,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x44,0x75,0x6f,0x91,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x7e,0x8f,0xce,0x32,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x95,0x65,0x48,0xbe,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xfe,0x19,0x1b,0xe2,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x3c,0xb2,0x26,0xe5,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x59,0x44,0xa2,0x8e,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xa1,0xc4,0xc3,0x55,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	//w=4,k=0
	.byte	0xf0,0xd2,0xe9,0xe3,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xac,0x11,0xd7,0xfa,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x1b,0xcb,0x66,0xf2,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x6f,0x2d,0x9b,0xc9,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
RND_CNS_ORIG3:
	.byte	0x78,0x60,0x26,0x49,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x8e,0xda,0xe9,0x52,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x3b,0x6b,0xa5,0x48,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xed,0xae,0x95,0x20,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	//w=4,k=4
	.byte	0x50,0x90,0xd5,0x77,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x2d,0x19,0x25,0xab,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xb4,0x64,0x96,0xac,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xd1,0x92,0x5a,0xb0,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x29,0x13,0x1a,0xb6,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x0f,0xc0,0x53,0xc3,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x3f,0x01,0x4f,0x0c,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0xfc,0x05,0x3c,0x31,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00


TESTMSG:
	.byte	0x61,0x62,0x63,0x80,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
TESTMSG2:
        .byte	0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68
        .byte	0x69,0x70,0x71,0x72,0x73,0x74,0x75,0x76
        .byte	0x77,0x78,0x79,0x80,0x81,0x82,0x83,0x84
        .byte	0x85,0x86,0x87,0x88,0x89,0x90,0x91,0x80
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00

.section	.data
	.align	32
buffer:
	.space	160
.section	.note.GNU-stack,"",@progbits
